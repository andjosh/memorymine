extends layout

block content
  if !user
    include welcome

  if user
    .pure-g-r
      .pure-u-1-6.wide-only
      .pure-u-1-3.wide-half
        include searchform
        #results-list
      .pure-u-1-3.pull-center.wide-half
        #form-error
        include memoryForm
        ul(id="memory-list")
          for memory in memories
            include memoryitem
      .pure-u-1-6.wide-only

    script
      window.onload = function() {
        var messages = [],
            memories = [],
            socket = io.connect(window.location.hostname),
            textField = document.getElementById("memory-text"),
            sendButton = document.getElementById("send"),
            linkField = document.getElementById("memory-link"),
            memoryList = document.getElementById("memory-list"),
            resultsList = document.getElementById("results-list"),
            accountId = document.getElementsByName("uid")[0],
            errorBox = document.getElementById('form-error'),
            searchButton = document.getElementById('search-submit-field'),
            searchField = document.getElementById('search-text-field');
        socket.on('error', function (data) {
          if(data) {
            var html = '';
            html += '<li style="color:red;"><b>Error: </b>';
            html += data.details + '</li>';
            memoryList.innerHTML = html.concat(memoryList.innerHTML);
          } else {
            console.log("There is a problem: ", data);
          }
        });
        socket.on('newMemory', function (data) {
          if(data.text && (data.accountId == accountId.content)) {
            var html = '<li class="animated fadeInDown">';
            if(data.link){
              html += '<a href="'+data.link+'" target="_blank">'+data.text+'</a><div class="memory-time"><small><a href="/memory/'+data._id+'">'+data.searchableTime+'</a></small></div></li>';
            } else {
              html += data.text+'<div class="memory-time"><small><a href="/memory/'+data._id+'">'+data.searchableTime+'</a></small></div></li>';
            }
            memoryList.innerHTML = html.concat(memoryList.innerHTML);
            var cleanNewMemory = window.setTimeout(cleanMemory, 1000, memoryList.children[0]);
          } else {
            console.log("There is a problem: ", data);
          }
        });
        socket.on('searchResult', function (data) {
          if(data.accountId == accountId.content){
            resultsList.innerHTML = '<div class="clear-search"><a onclick="clearSearch(this.parentElement.parentElement);"><i class="icon-remove-sign"></i></a></div>';
            for(i=0;i<data.memories.length;i++){
              var html = '<li class="animated fadeInDown">';
              if(data.memories[i].link){
                html += '<a href="'+data.memories[i].link+'" target="_blank">'+data.memories[i].text+'</a><div class="memory-time"><small>';
              } else {
                html += data.memories[i].text+'<div class="memory-time"><small>';
              }
              if(data.memories[i].tweetId){
                html+='<a href="http://twitter.com/statuses/'+data.memories[i].tweetId+'" target="_blank"><i class="icon-twitter"></i> '+data.memories[i].searchableTime+'</a></small></div></li>';
              }else{
                html+='<a href="/memory/'+data.memories[i]._id+'">'+data.memories[i].searchableTime+'</a></small></div></li>';
              }
              resultsList.innerHTML += html
            }
            if(data.memories.length == 0){
              resultsList.innerHTML += '<p class="muted text-center">No memory of that keyword.</p>';
            }
            var hiliteTimeout = window.setTimeout(hiliteResults,1000,data.searchText);
          } else {
            console.log("There is a problem: ", data);
          }
        });
        sendButton.onclick = sendMemory = function() {
          if((textField.value == "") || (textField.value == "\n")) {
            errorBox.className = '';
            errorBox.innerHTML = '<p class="error">You should type something to remember!</p>';
            textField.value = null;
            var timeoutID = window.setTimeout(dismissError, 1000, errorBox);
          } else {
            var possibleHtml = textField.value;
            var div = document.createElement("div");
            div.innerHTML = possibleHtml;
            var cleanText = div.textContent || div.innerText || "";
            socket.emit('createMemory', { text: cleanText, link: linkField.value, searchableUrl: createSearchableUrl(linkField.value), accountId: accountId.content, time: (new Date) });
            textField.value = null, linkField.value = null;
          }
        };
        searchButton.onclick = sendSearch = function() {
          if((searchField.value == "") || (searchField.value == "\n")) {
            errorBox.className = '';
            errorBox.innerHTML = '<p class="error">You should type something to search!</p>';
            searchField.value = null;
            var timeoutID = window.setTimeout(dismissError, 1000, errorBox);
          } else {
            socket.emit('sendSearch', { query: searchField.value, accountId: accountId.content, });
          }
        };
        function dismissError(div){
          div.className = 'animated fadeOutDown';
        }
        function createSearchableUrl(url){
          var tmp = document.createElement('a');
          tmp.href = url;
          return (tmp.hostname+' '+tmp.pathname);
        }
        function cleanMemory(element){
          element.className = null;
        }
        function checkText(evt){
          if (evt.keyCode == 13) {
            sendMemory();
            textField.focus();
            evt.preventDefault();
          }
        };
        function checkSearch(evt){
          if (evt.keyCode == 13) {
            sendSearch();
            searchField.select();
            evt.preventDefault();
          }
        };
        linkField.onkeydown = textField.onkeydown = function(evt) {
          evt = evt || window.event;
          checkText(evt);
        };
        searchField.onkeydown = searchButton.onkeydown = function(evt) {
          evt = evt || window.event;
          checkSearch(evt);
        };
        function hiliteResults(word){
          for(i=1;i<resultsList.childElementCount;i++){
            hiliter(word, resultsList.children[i]);
          }
        }
        function hiliter(word, element) {
          var rgxp = new RegExp(word, 'i');
          var repl = '<span class="hiliter">' + word + '</span>';
          element.innerHTML = element.innerHTML.replace(rgxp, repl);
        };
      };
      function clearSearch(element){
        for(i=0;i<element.childElementCount;i++){
          element.children[i].className += ' animated fadeOutDown';
        }
        var clearSearchTimeout = window.setTimeout(clearSearchInner, 700, element);
        var input = document.getElementById('search-text-field');
        input.value = null;
        input.focus();
      };
      function clearSearchInner(element){element.innerHTML = null;};
    include truncate